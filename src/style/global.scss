
// GRP: General
$app-colors: "grey", "blue", "red", "green", "invert";
$notion-colors: (
	"default""gray""brown""orange""yellow""green""blue""purple""pink""red"
);

// SECT: Box, Border, & Shadow

@mixin flex($dir: row, $justify: flex-start, $align: center) {
	display: flex;
	flex-direction: $dir;
	justify-content: $justify;
	align-items: $align;
}

@mixin scrollbar() {
	&::-webkit-scrollbar {
		width: 0.5rem;
		opacity: 0;
		transition: 200ms ease-in-out;
	}

	&::-webkit-scrollbar-button {
		height: 0px;
	}

	&::-webkit-scrollbar-thumb {
		background: var(--bg-darker);
		border-radius: 3px;
		height: 3rem;
	}

	&:hover {
		&::-webkit-scrollbar {
			opacity: 1;
		}
	}
}

@mixin input-shadow() {
	box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.02),  0 0 4px 0 rgba(0, 0, 0, 0.02) inset;;
}

// !SECT

// SECT: TEXT

@mixin h1($color: var(--text-colored)) {
	font-size: 1rem;
	font-weight: 700;
	color: $color;
	padding: 0;
	margin: 0;
	text-transform: uppercase;
}

@mixin h2($color: var(--text-dark)) {
	font-size: 0.875rem;
	font-weight: 700;
	color: $color;
	padding: 0;
	margin: 0;
	text-transform: uppercase;
}

@mixin h3($color: var(--text-dark)) {
	font-size: 0.875rem;
	font-weight: 600;
	color: $color;
	padding: 0;
	margin: 0;
}

@mixin ui-text($color: var(--text-dark), $size: 0.875, $weight: 400) {
	font-size: $size;
	font-weight: $weight;
	color: $color;
	font-family: var(--font-family);
}

// TODO: Transfer below to universal ui-text() mixin

@mixin ui-text-default($color: var(--text-dark), $weight: 400) {
	font-size: 0.875rem;
	font-weight: $weight;
	color: $color;
	font-family: var(--font-family);
}

@mixin ui-text-small($color: var(--text-light), $weight: 400) {
	font-size: 0.75rem;
	font-weight: $weight;
	color: $color;
	font-family: var(--font-family);
}

// !SECT

// SECT: Animation
@mixin hover-effect($color: var(--bg-dark)) {
	transition: 0.2s ease-in-out;

	&:hover {
		filter: brightness(1.05);
	}
}

@mixin click($color, $id) {
	@keyframes click-#{$id} {
		0% {
			box-shadow: 0 0 0 2px $color;

		}

		50% {
			box-shadow: 0 0 0 4px $color;
		}

		100% {
			box-shadow: 0 0 0 2px $color;
		}
	}

	animation: click-#{$id} 0.2s ease-in-out;
}

@mixin pulse() {
	@keyframes pulse {
		0% {
			transform: scale(1);
			opacity: .7;
		}

		50% {
			transform: scale(1.05);
			opacity: 0.4;
		}

		100% {
			transform: scale(1);
			opacity: .7;
		}
	}

	animation: pulse 2s ease-in-out infinite;
}

// TODO: Delete below if still unused
@keyframes on-initial {
	0% {
		opacity: 0;
		transform: scale(0%);
	}

	100% {
		opacity: 1;
		transform: scale(100%);
	}
}
// !SECT


@mixin inputLabel() {
	.input-label {
		@include flex(row, flex-start, center);
		margin: 0 0 0.5rem 0.175rem;

		.label-text {
			> h3 {
				@include h3();
				flex-grow: 1;
			}
		}
	}
}

.icon-item {
	height: 32px;
	width: 32px;

	img {
		height: 100%;
		width: 100%;
	}
}



// SECT: Svelecte

.svelecte {
	width: 100%;

	// GRP: Item
	.sv-item {
		@include ui-text-default(var(--text-dark), 500);
		min-height: 1.5rem !important;
		padding: 0 !important;
		cursor: pointer !important;
		height: 1.75rem !important;
		border-radius: var(--border-radius);
		overflow: hidden;
		margin: 0 !important;
		width: 100%;
		background-color: transparent !important;

		.sv-item-content {
			@include ui-text-default(var(--text-dark) !important, 500 !important);
			box-sizing: border-box;
			padding: 0 !important;
			height: 100%;
			width: fit-content;
			& > :first-child {
				padding: 0 0.5rem !important;
				&.n-status {
					padding: 0 0.75rem !important;
				}
			}


		}

		@each $color in $notion-colors {
			&:has(.n-select.#{$color}) {
				.n-select.#{$color} {
					background-color: var(--notion-#{$color}) !important;
					color: var(--notion-text-#{$color}) !important;
				}

				.status-dot {
					background-color: var(--notion-#{$color}) !important;
					filter: brightness(0.6) saturate(2);
				}

				& > .sv-item-btn {
					background-color: var(--notion-#{$color}) !important;
					filter: brightness(1.05);

					& > svg {
						fill: var(--notion-text-#{$color}) !important;
					}

					&:hover {
						filter: brightness(1.08);
					}
				}
			}
		}

		.n-select {
			@include flex(row, flex-start, center);
			height: 100%;
			.sv-item-icon {
				padding: 1px 0 0 0 !important;
				img,
				svg {
					padding: 0 0.25rem 0 0 !important;
				}
			}
	
			.sv-item-text {
				padding: 0 !important;
			}
			&.n-status {
				border-radius: 1rem !important;
				.status-dot {
					border-radius: 1rem;
					height: 0.5rem !important;
					width: 0.5rem !important;
					margin: auto 0.5rem auto 0;
					padding: 0;
				}
			}
		}

		.sv-item-btn {
			border-radius: 0 !important;
			background-color: var(--bg-dark) !important;
			margin-left: -3px;

			&:hover {
				filter: brightness(1.03);
			}
		}

	}

	// GRP: Input
	.sv-control {
		border: 1px solid var(--border-color) !important;
		height: auto !important;
		box-sizing: border-box;
		width: 100%;
		@include input-shadow();

		.sv-content {
			padding: 0.25rem !important;
			gap: 0.25rem;

			.inputBox {
				margin: 0 0 0 0.35rem !important;
				&::placeholder {
				@include ui-text(var(--text-light), 0.875rem, 500);

				}
			}


		}
	}

	// GRP: Dropdown
	.sv-dropdown {
		margin-top: 0.25rem !important;
		bottom: unset !important;
		box-shadow: 0 0 2rem 0 rgba(0, 0, 0, 0.07) !important;



		.sv-dropdown-scroll {
			@include scrollbar();
			padding: 0.5rem 0 !important;
			overflow-y: auto !important;
			max-height: 350px !important;
			.sv-dropdown-content {
				display: flex;
				flex-direction: column;
				row-gap: 0.5rem;

				.sv-item-content {
					:first-child:not(.n-status) {
						border-top-left-radius: 0.25rem !important;
						border-bottom-left-radius: 0.25rem !important;
					}

					:last-child:not(.n-status) {
						border-top-right-radius: 0.25rem !important;
						border-bottom-right-radius: 0.25rem !important;
					}
				}

				.empty-list-row {
					@include flex(row, center, center);
					@include ui-text-default(var(--text-light), 600);
					height: 3rem;
				}
				.optgroup-header {
					@include ui-text(var(--text-light), 0.75rem, 500);
				}
				.sv-item {
					margin-left: 0.5rem !important;
				}
				.sv-dd-item-active {
					background-color: var(--bg-dark) !important;
				}
			}
		}
	}
}
// !SECT

// SECT: Svelty Picker
.form-control {
	@include ui-text(var(--text-dark), 0.875rem, 500);
	border: none;
	border-radius: 0;
	outline: none;
	width: 100%;
	height: 2rem;
	display: flex;
	align-items: center;
	justify-content: flex-start;

	&::placeholder {
		@include ui-text(var(--text-light), 0.875, 500);
	}
}

.sdt-calendar-colors {
	--sdt-primary: #0180ff !important;
	--sdt-btn-bg-hover: hsl(200, 35%, 97%) !important;
	--sdt-color: hsl(217, 24%, 20%) !important;
}
.sdt-background  {
	content: "";
	background: rgba(0,0,0,.5);
	height: 600px;
	width: 400px;
	position: fixed;
	top: 0;
	left: 0;
	z-index: 10000;
	overflow: hidden;
	@include flex(column, center, center)
}
.std-calendar-wrap {
	top: 147px !important;
	left: 55px !important;
	font-family: var(--font-family) !important;
	box-shadow: 0 0 2rem 0 rgba(0, 0, 0, 0.07), 0 0 0 400px rgba(0,0,0,0.2)  !important;
	border: 1px solid rgba(0,0,0,0.1) !important;
	border-radius: 0.25rem !important;
	height: fit-content;
	box-sizing: border-box;;
	.sdt-timer {
		width: 280px !important;
		.sdt-hand-circle {
			background-color: #0180ff !important;
		}
		.sdt-meridian {
			position: unset !important;
			color: #666666 !important;
			transition: 200ms ease-in-out !important;
			&:hover {
				background: hsl(200, 35%, 97%) !important;
			}

		}
		.sdt-time-head {
			.sdt-time-figure {
				color: #999999 !important;
				&.is-active {
					color: #666666 !important;
				}
			}

		}
	}
	.sdt-calendar {
		height: 226px !important;
	}
	.sdt-cal-td {
		transform: translateY(-7px) !important;
	}
	.sdt-clock {
		background: hsl(200, 35%, 97%) !important;
	}
	.std-btn-header {
		padding: 0 0.5rem !important;
		&:hover {
			background-color: hsl(200, 35%, 97%) !important;
		}
	}
	.sdt-svg {
		fill: hsl(217, 24%, 20%) !important;
		color: hsl(217, 24%, 20%) !important;
	}
	.std-btn-row {
		@include flex(row !important, center, center);
		padding: 0.5rem 0.25rem 0 0.25rem;
		column-gap: 0.5rem;
		box-sizing: border-box;
		button {
			@include ui-text(var(--text-dark), 0.875rem, 500);
			flex-grow: 1;
		}
		.sdt-today-btn {
			background: #0180ff !important;
			color: white !important;
			border: 1px solid transparent !important;
			transition: filter 200ms, box-shadow 200ms !important;
			&:hover {
				box-shadow: 0 0 0 2px #4da6ff;
				filter: brightness(1.05);
			}
		}
		.sdt-clear-btn {
			background: #ffd6da;
			color: #ff5060;
			border: 1px solid transparent !important;
			transition: filter 200ms, box-shadow 200ms !important;
			&:hover {
				box-shadow: 0 0 0 2px #ff858f;
				filter: brightness(0.95);
			}
		}
	}
}

// @each $color in $notion-colors {
// 	.sv-dd-item:has(.sv-item > .sv-item-content > .n-multiselect.#{$color}) {
// 		.sv-item-content {
// 			width: fit-content !important;
// 			background-color: var(--notion-#{$color}) !important;
// 			padding: 0 0.5rem;
// 			box-sizing: border-box;
// 			border-radius: 4px;
// 		}
// 	}
// }